plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.example'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    configureEach {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = '2.2.6.RELEASE'
    awsSdkVersion = '2.29.1'
    posgresqlVersion = '42.7.4'
}

dependencies {
    implementation "org.springframework.cloud:spring-cloud-aws-messaging:${springCloudVersion}"
    implementation platform("software.amazon.awssdk:bom:${awsSdkVersion}")
    implementation "software.amazon.awssdk:s3"
    implementation "software.amazon.awssdk:s3-transfer-manager:${awsSdkVersion}"
    implementation "software.amazon.awssdk:dynamodb"
    implementation 'software.amazon.awssdk:dynamodb-enhanced'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.765'
    implementation "org.postgresql:postgresql:${posgresqlVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("jar").configure {
    archiveClassifier.set("")
    enabled(true)
}
